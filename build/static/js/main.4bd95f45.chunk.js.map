{"version":3,"sources":["components/layout/Navbar.jsx","components/layout/Sidebar.jsx","components/Button.jsx","components/layout/Main.jsx","components/layout/Footer.jsx","components/layout/Home.jsx","components/layout/BoxPage.jsx","components/Context.jsx","components/layout/ListPage.jsx","components/HocListComponent.jsx","components/layout/FormPage.jsx","components/layout/TwoBox.jsx","App.js","serviceWorker.js","index.js"],"names":["Navbar","className","to","Sidebar","Button","state","text","handleClick","setState","onClick","this","Component","Main","content","Footer","Home","BoxPage","display","style","width","height","backgroundColor","margin","Context","React","createContext","Provider","user","axios","get","then","data","catch","err","console","log","value","props","children","Consumer","HocListComponent","WrappedComponent","randomColours","Math","floor","random","lemgth","Fragment","map","key","id","name","Form","username","password","handleSubmit","e","preventDefault","handleChange","input","target","onSubmit","onChange","type","placeholder","TwoBox","red","green","App","exact","path","component","ListPage","FormPage","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4bd95f45.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <nav className=\"navbar\">\r\n      <NavLink className=\"navlink\" to=\"/\">\r\n        Home\r\n      </NavLink>\r\n      <NavLink className=\"navlink\" to=\"/box\">\r\n        Box Page\r\n      </NavLink>\r\n      <NavLink className=\"navlink\" to=\"/list\">\r\n        List Page\r\n      </NavLink>\r\n      <NavLink className=\"navlink\" to=\"/form\">\r\n        Form Page\r\n      </NavLink>\r\n      <NavLink className=\"navlink\" to=\"/twobox\">\r\n        Twobox Page\r\n      </NavLink>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from 'react'\r\n\r\nconst Sidebar = () => {\r\n    return (\r\n        <div className=\"sidebar\">\r\n            <h3>Sidebar</h3>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sidebar\r\n","import React, { Component } from \"react\";\r\n\r\nclass Button extends Component {\r\n  state = {\r\n    text: \"ON\"\r\n  };\r\n  handleClick = () => {\r\n    let text;\r\n    text = this.state.text === \"ON\" ? \"OFF\" : \"ON\";\r\n    this.setState({ text: text });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <button onClick={this.handleClick}>{this.state.text}</button>\r\n        <button className=\"color-button\">COLOR BUTTON</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\nimport Button from \"../Button\";\r\n\r\nconst Main = ({ content }) => {\r\n  return (\r\n    <div className=\"main\">\r\n      <h3>Main Section</h3>\r\n      <p>{content.text}</p>\r\n      <Button />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import React from 'react'\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <nav className=\"footer\">\r\n        <h3>Footer</h3>\r\n      </nav>\r\n    )\r\n}\r\n\r\nexport default Footer","import React, { Component } from \"react\";\r\nimport Sidebar from \"./Sidebar\";\r\nimport Main from \"./Main\";\r\nimport Footer from \"./Footer\";\r\n\r\nclass Home extends Component {\r\n  state = {\r\n    content: {\r\n      text:\r\n        \"orem, ipsum dolor sit amet consectetur adipisicing elit. Blanditiis, illum! Repellat, fugit sunt laboriosam eaque fugiat veniam? Natus possimus maxime veniam dolores tenetur reprehenderit deleniti tempora, id voluptatem impedit aspernatur.\"\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"main-section\">\r\n          <Sidebar />\r\n          <Main content={this.state.content} />\r\n        </div>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React, { Component } from \"react\";\r\n\r\nclass BoxPage extends Component {\r\n  state = {\r\n    display: \"block\"\r\n  };\r\n  handleClick = () => {\r\n    let display;\r\n    display = this.state.display === \"block\" ? \"none\" : \"block\";\r\n    this.setState({ display: display });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"box-page\">\r\n        <div\r\n          style={{\r\n            display: this.state.display,\r\n            width: \"100px\",\r\n            height: \"100px\",\r\n            backgroundColor: \"blue\",\r\n            margin: \"40px auto\"\r\n          }}\r\n          className=\"box\"></div>\r\n        <div className=\"btn-container\">\r\n          <button onClick={this.handleClick}>Click Me</button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BoxPage;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst Context = React.createContext();\r\n\r\nconst URL = \"https://jsonplaceholder.typicode.com/users\";\r\n\r\nexport class Provider extends Component {\r\n  state = {\r\n    user: []\r\n  };\r\n\r\n  componentDidMount() {\r\n    axios\r\n      .get(URL)\r\n      .then(data => {\r\n        this.setState({ user: data.data });\r\n      })\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Context.Provider value={this.state}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;\r\n","import React, { Component } from \"react\";\r\nimport HocListComponent from \"../HocListComponent\";\r\nimport { Consumer } from \"../../components/Context\";\r\n\r\nclass ListPage extends Component {\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {data => {\r\n          const { user } = data;\r\n          if (user.lemgth < 1) {\r\n            return <h3>List is Empty</h3>;\r\n          } else {\r\n            return (\r\n              <React.Fragment>\r\n                <ol>\r\n                  {user.map(user => {\r\n                    return <li key={user.id}>{user.name}</li>;\r\n                  })}\r\n                </ol>\r\n                <p>Refresh page to see HOC change text colors</p>\r\n              </React.Fragment>\r\n            );\r\n          }\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n// hoc change list item colors.\r\nexport default HocListComponent(ListPage);\r\n","import React from \"react\";\r\nimport { Provider } from \"./Context\";\r\n\r\nconst HocListComponent = WrappedComponent => {\r\n  const colours = [\"red\", \"blue\", \"gray\", \"pink\", \"green\", \"yellow\"];\r\n  const randomColours = colours[Math.floor(Math.random() * 5)];\r\n  console.log(randomColours);\r\n\r\n  return () => {\r\n    return (\r\n      <Provider>\r\n        <div className={randomColours}>\r\n          <WrappedComponent />\r\n        </div>\r\n      </Provider>\r\n    );\r\n  };\r\n};\r\n\r\nexport default HocListComponent;\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class Form extends Component {\r\n  state = {\r\n    username: \"\",\r\n    password: \"\"\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    console.log(this.state);\r\n  };\r\n\r\n  handleChange = input => e => {\r\n    this.setState({ [input]: e.target.value });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <input\r\n            onChange={this.handleChange(\"username\")}\r\n            type=\"text\"\r\n            name=\"username\"\r\n            placeholder=\"username\"\r\n          />\r\n          <input\r\n            onChange={this.handleChange(\"password\")}\r\n            type=\"text\"\r\n            placeholder=\"******\"\r\n          />\r\n          <input type=\"submit\" value=\"Login\" />\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nclass TwoBox extends Component {\r\n  state = {\r\n    red: \"block\",\r\n    green: \"block\"\r\n  };\r\n  handleChange = e => {\r\n    if (e.target.value === \"green\") {\r\n      this.setState({ red: \"none\" });\r\n    } else if (e.target.value === \"red\") {\r\n      this.setState({ green: \"none\" });\r\n    } else {\r\n      this.setState({ red: \"block\", green: \"block\" });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"box-page\">\r\n        <div\r\n          style={{\r\n            display: this.state.red,\r\n            width: \"50px\",\r\n            height: \"50px\",\r\n            backgroundColor: \"red\",\r\n            margin: \"40px auto\"\r\n          }}\r\n          className=\"box\"></div>\r\n        <div\r\n          style={{\r\n            display: this.state.green,\r\n            width: \"50px\",\r\n            height: \"50px\",\r\n            backgroundColor: \"green\",\r\n            margin: \"40px auto\"\r\n          }}\r\n          className=\"box\"></div>\r\n        <input onChange={this.handleChange} type=\"text\" />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TwoBox;\r\n","import React, { Component } from \"react\";\r\nimport { BrowserRouter, Route } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport Navbar from \"./components/layout/Navbar\";\r\nimport Home from \"./components/layout/Home\";\r\nimport BoxPage from \"./components/layout/BoxPage\";\r\nimport ListPage from \"./components/layout/ListPage\";\r\nimport FormPage from \"./components/layout/FormPage\";\r\nimport TwoBox from \"./components/layout/TwoBox\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <BrowserRouter>\r\n        <React.Fragment>\r\n          <Navbar />\r\n          <Route exact path=\"/\" component={Home} />\r\n          <Route path=\"/box\" component={BoxPage} />\r\n          <Route path=\"/list\" component={ListPage} />\r\n          <Route path=\"/form\" component={FormPage} />\r\n          <Route path=\"/twobox\" component={TwoBox} />\r\n        </React.Fragment>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}